rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection: only auth users can read/write own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    // MLResults: clinicians can read all, patients own
    match /mlResults/{docId} {
      allow read: if request.auth != null && (isClinician(request.auth.uid) || resource.data.userId == request.auth.uid);
      allow write: if request.auth != null;
    }
    // Scans: patients can read/write own
    match /scans/{docId} {
      allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    // Chat messages: users can read/write own
    match /chatMessages/{docId} {
      allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    // Emergencies: patients can create, clinicians can read all
    match /emergencies/{docId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && (isClinician(request.auth.uid) || resource.data.userId == request.auth.uid);
    }
    // Appointments: users can read/write own
    match /appointments/{docId} {
      allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    // Audit logs: admin only
    match /auditLogs/{logId} {
      allow read, write: if isAdmin(request.auth.uid);
    }
    
    function isClinician(uid) {
      return get(/databases/$(database)/documents/users/$(uid)).data.role == 'clinician';
    }
    
    function isAdmin(uid) {
      return get(/databases/$(database)/documents/users/$(uid)).data.role == 'admin';
    }
  }
}
